substr(filename, 1, 5)
resxl
substr(filename, 1, 5)
readCreditExcel <- function(filename) {
sheetNames <- readxl::excel_sheets(filename)
colTypes <- readxl:::xlsx_col_types(path = filename, nskip = 10, n = 1)
resxl <- readxl::read_excel(filename, sheet = sheetNames[1], col_names = FALSE, skip = 8, col_types = colTypes)
colnames(resxl) <- c("金融機構名稱", "流通卡數", "有效卡數", "當月發卡數", "當月停卡數", "循環信用餘額", "未到期分期付款餘額", "當月簽帳金額", "當月預借現金金額", "逾期三個月以上帳款占應收帳款餘額含催收款之比率", "逾期六個月以上帳款占應收帳款餘額含催收款之比率", "備抵呆帳提足率", "當月轉銷呆帳金額", "當年度轉銷呆帳金額累計至資料月份")
dataLength <- sum(1 - is.na(resxl$流通卡數))
resxl <- resxl[1:dataLength,]
resxl <- cbind(月份 = substr(filename, 1, 5), resxl)
return(resxl)
}
creditData <- lapply(filenames, readCreditExcel)
creditData <- do.call("rbind", creditData)
# View(creditData)
setwd("../")
head(creditData)
head(creditData)
class()
Cl_info
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", stringsAsFactors = F, header = T, colClasses = c("character", "integer", "Date", "character", "Date", "character", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric"))
head(Cl_info)
getwd()
res <- readLines(con = "data/cl_info_other.csv", n = 10L, encoding = "BIG-5")
head(res)
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", stringsAsFactors = F, header = T, colClasses = c("character", "integer", "Date", "character", "Date", "character", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric"))
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", fileEncoding = "big5", stringsAsFactors = F, header = T, colClasses = c("character", "integer", "Date", "character", "Date", "character", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric"))
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", fileEncoding = "utf8", stringsAsFactors = F, header = T, colClasses = c("character", "integer", "Date", "character", "Date", "character", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric"))
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", stringsAsFactors = F, header = T, colClasses = c("character", "integer", "Date", "character", "Date", "character", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric", "integer", "numeric"))
library(RCurl)
Cl_info = read.table(sep=",", header=TRUE, stringsAsFactors=F, file=textConnection(getURL("https://raw.githubusercontent.com/suensummit/RCourseBankSinoPac/gh-pages/data/cl_info_other.csv")))
head(Cl_info)
getwd()
dim(Cl_info)
head(Cl_info)
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",",
stringsAsFactors = F, header = T,
colClasses = c("character", "character", "character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
fileEncoding = "utf8")
Cl_info = read.table(file=textConnection(getURL("https://raw.githubusercontent.com/suensummit/RCourseBankSinoPac/gh-pages/data/cl_info_other.csv"),
sep = ",",
stringsAsFactors = F, header = T,
colClasses = c("character", "character", "character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
fileEncoding = "utf8")
Cl_info = read.table(file=textConnection(getURL("https://raw.githubusercontent.com/suensummit/RCourseBankSinoPac/gh-pages/data/cl_info_other.csv")),
sep = ",",
stringsAsFactors = F, header = T,
colClasses = c("character", "character", "character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
fileEncoding = "utf8")
head(Cl_info)
?barplot
80000*0.05
20000*0.05
100000*0.05
25000*0.05
factorial
gamma
.Primitive("gamma")
x <- 10
f1 <- function(x) {
function() {
x + 10
}
}
f1(1)()
f1(1)
f1(1)()
`+`(1, `*`(2, 3))
setwd("~/works/R_Learning/RViz")
library(ggplot2)
setwd("~/works/R_Courses/RCourseBankSinoPac")
ggplot(diamonds) +
geom_point(aes(x = carat, y= price, colour = cut))
ggplot(diamonds) +
geom_point(aes(x = carat, y= price, colour = cut)) +
scale_y_log() +
face_wrap(~cut) +
ggtile("Simple Example")
ggplot(diamonds) +
geom_point(aes(x = carat, y= price, colour = cut)) +
scale_y_log10() +
face_wrap(~cut) +
ggtile("Simple Example")
ggplot(diamonds) +
geom_point(aes(x = carat, y= price, colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtile("Simple Example")
ggplot(diamonds) +
geom_point(aes(x = carat, y= price, colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtitle("Simple Example")
ggplot(data = diamonds) +
geom_point(aes(x = carat, y= price, colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtitle("Simple Example")
ggplot(data = diamonds,aes(x = carat, y= price)) +
geom_point(aes(colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtitle("Simple Example")
?geom_point
p<-ggplot(small)
p+geom_point(aes(x=carat,y=price,colour=cut))
p<-ggplot(small)
small <- head(diamonds)
p<-ggplot(small)
p+geom_point(aes(x=carat,y=price,colour=cut))
p+geom_point(aes(x=carat,y=price),colour="blue")
p+geom_point(aes(x=carat,y=price,colour="blue"))
p+geom_point(aes(x=carat,y=price))+facet_wrap(~cut)
ggplot(data = diamonds,aes(x = carat, y= price)) +
geom_point(aes(colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtitle("Simple Example")
p+geom_point(aes(x=carat,y=price))+facet_grid(cut~color)
ggplot(data = diamonds,aes(x = carat, y= price)) +
geom_point(aes(colour = cut)) +
scale_y_log10() +
facet_wrap(~cut) +
ggtitle("Simple Example")
ggplot(data = diamonds,aes(x = carat, y= price)) +
geom_point(aes(colour = cut)) +
scale_y_log10() +
facet_wrap(~cut, ncol = 2) +
ggtitle("Simple Example")
p<-ggplot(diamonds,aes(x=carat,y=price,colour=cut))
p<-p+scale_x_log10()+scale_y_log10()
p<-p+geom_point(alpha=0.3)+geom_smooth(method="lm",colour='black')
p<-p+facet_wrap(~cut)
print(p)
ggplot(small)+geom_histogram(aes(x=clarity,fill=cut),position="fill")
small
class(small$clarity)
small$clarity <- as.numeric(small$clarity)
ggplot(small)+geom_histogram(aes(x=clarity,fill=cut),position="fill")
ggplot(small)+geom_histogram(aes(x=clarity))
small
ggplot(small)+geom_histogram(aes(x=clarity,fill=cut))
ggplot(small)+geom_histogram(aes(x=clarity,fill=cut),position="dodge")
ggplot(small)+geom_density(aes(x=price,fill=cut),alpha=0.5)
ggplot(small)+geom_density(aes(x=price,colour=cut))
ggplot(small)+geom_density(aes(x=price))
ggplot(small)+geom_density(aes(x=price,fill=cut))
ggplot(small)+geom_density(aes(x=price,fill=clarity))
ggplot(small)+geom_boxplot(aes(x=cut,y=price,fill=color))
ggplot(small)+geom_boxplot(aes(x=cut,y=price))
setwd("~/works/R_Courses/RReportCrashCourse")
url <- "https://dl.dropboxusercontent.com/u/68133220/data/datasets.rda"
getwd()
download.file(url,paste0(getwd(),"/data/datasets.rda"))
load("datasets.rda")
load("data/datasets.rda")
head(bike)
head(anscombe)
Cl_info = read.table(file = "data/cl_info_other.csv", sep = ",", stringsAsFactors = F, header = T, colClasses = c("character", "character", "character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), encoding = "utf8")
library(RCurl)
Cl_info = read.table(sep=",", header=TRUE, stringsAsFactors=F, file=textConnection(getURL("https://raw.githubusercontent.com/suensummit/RCourseBankSinoPac/gh-pages/data/cl_info_other.csv")))
save(Cl_info,quartet,file = "datasets.rda")
load("datasets.rda")
Cl_info %>%
group_by(bank_nm) %>%
summarise(mean(mortgage_cnt))
Cl_info %>%
group_by(bank_nm)
Cl_info %>%
group_by(bank_nm) %>%
summarise(mean(mortgage_cnt))
library(datasets);library(dplyr);library(ggplot2);library(devtools);library(reshape2)
Cl_demo5 = summarise(group_by(Cl_info, bank_nm), mean(mortgage_cnt))
head(Cl_demo5)
Cl_info %>%
group_by(bank_nm) %>%
summarise(mean(mortgage_cnt))
library(ggplot2)
p = ggplot(quartet, aes(x, y)) + geom_point()
p = p + geom_smooth(method = lm, se = FALSE)
p = p + facet_wrap(~set)
p
80000/6
14500*6
13500*6
52-12
84000/52
1650*52
1600*52
83200/6
83200*1.05
1500*1.05
1500*1.05*52
1550*1.05*52
84630/6
84630/6/1.05
library(rmarkdown)
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
getwd()
res <- readLines(con = "data/cl_info_other.csv", n = 10L, encoding = "BIG-5")
rmarkdown::render("index.Rmd")
Cl_info = load(file = "datasets.rda")
Cl_info
head(Cl_info)
load(file = "datasets.rda")
head(Cl_info)
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
head(creditData)
save(Cl_info,quartet,creditData,file = "datasets.rda")
try1<- select(creditData, 金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數, 逾期三個月以上帳款占應收帳款餘額含催收款之比率) %>% filter(金融機構名稱 == "臺灣銀行")
ggplot(creditData,aes(x=as.numeric(月份),y=流通卡數))+geom_line(aes(group=金融機構名稱))
class(creditData)
class(creditData$月份)
ggplot(creditData,aes(x=月份,y=流通卡數))+geom_line(aes(group=金融機構名稱))
ls()
a <- load("data/datasets.rda")
a
save(Cl_info,quartet,creditData,file = "data/datasets.rda")
head(creditData)
dim(creditData)
names(creditData)
str(creditData)
head(creditDataCompete)
credit
credit <- creditData %>% mutate(
月份 = as.numeric(月份)
)
str(credit)
head(credit)
unique(credit$月份)
unique(creditData$月份)
credit <- creditData
credit$月份 <- ifelse(test = creditData$月份 == "更新_10", yes = "10405")
?ifeles
?ifelse
credit$月份 <- ifelse(test = creditData$月份 == "更新_10", yes = "10405", no = creditData$月份)
credit$月份 <- ifelse(test = creditData$月份 == "附表4_1", yes = "10405", no = creditData$月份)
unique(creditData$月份)
unique(credit$月份)
credit <- creditData
unique(creditData$月份)
credit <- creditData
credit$月份 <- ifelse(test = creditData$月份 == "更新_10", yes = "10405", no = creditData$月份)
credit$月份 <- ifelse(test = creditData$月份 == "附表4_1", yes = "10311", no = creditData$月份)
unique(credit$月份)
unique(creditData$月份)
creditData$月份 == "更新_10"
unique(credit$月份)
credit$月份 <- ifelse(test = creditData$月份 == "更新_10", yes = "10405", no = creditData$月份)
unique(credit$月份)
unique(creditData$月份)
credit <- creditData
credit$月份 <- as.character(credit$月份)
credit$月份 <- ifelse(test = credit$月份 == "更新_10", yes = "10405", no = credit$月份)
credit$月份 <- ifelse(test = credit$月份 == "附表4_1", yes = "10311", no = credit$月份)
unique(credit$月份)
head(credit)
page(credit,"print")
View(credit)
credit %>% ggplot(aes(x=月份,y=流通卡數)) + geom_line(aes(group=金融機構名稱))
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410')
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410')
barplot(try1$流通卡數,names=try1$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
ggplot(try1,aes(x=金融機構名稱,y=流通卡數))+geom_bar(stat='identity')+coord_flip()
plot_ly(p)
library(plotly)
plot_ly(p)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數))+geom_bar(stat='identity')+coord_flip()
p
library(plotly)
plot_ly(p)
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity')
p
library(plotly)
plot_ly(p)
ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) +  geom_boxplot()
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) +  geom_boxplot() + coord_flip()
ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) +  geom_boxplot() + coord_flip()
p
plot_ly(p)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
library(plotly)
ggplotly(p)
?ggplotly
p
ggplotly(p)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity')
p
p %>% add_trace(orientation = "h")
plot_ly(p)
plot_ly(p,orientation = "h")
plot_ly(p,orientation = "v")
p
ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_filp()
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity')
plot_ly(p)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity')
plot_ly(p)
plot_ly(p) %>% add_trace(orientation = "h")
plot_ly(p) %>% add_trace(type = "bar", orientation = "h")
try1 %>% plot_ly(x = 金融機構名稱, type="bar")
try1 %>% plot_ly(x = 金融機構名稱, y = 流通卡數, type="bar")
try1 %>% plot_ly(x = 金融機構名稱, y = 流通卡數, type="bar", orientation = "v")
try1 %>% plot_ly(x = 金融機構名稱, y = 流通卡數, type="bar", orientation = "h")
try1 %>% plot_ly(y = 金融機構名稱, x = 流通卡數, type="bar", orientation = "h")
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410') %>% arrange(流通卡數)
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410') %>% arrange(流通卡數)
# 找出永豐銀行的位置
index=which(try1$金融機構名稱=="永豐商業銀行")
try1 <- try1 %>% mutate(金融機構名稱=factor(try1$金融機構名稱,levels=try1$金融機構名稱))
index
try1$金融機構名稱=="永豐商業銀行"
ry1
try1
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10401')
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10401') %>% arrange(流通卡數)
index=which(try1$金融機構名稱=="永豐商業銀行")
index
try1 <- credit %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410') %>% arrange(流通卡數)
index=which(try1$金融機構名稱=="永豐商業銀行")
index
try1 <- try1 %>% mutate(金融機構名稱=factor(try1$金融機構名稱,levels=try1$金融機構名稱))
try1
try1 <- credit %>% select(月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410')
try1 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410')
barplot(try1$流通卡數,names=try1$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
try1 <- try1 %>%  arrange(desc(流通卡數))
try1
head(try1)
index=which(try1$金融機構名稱=="永豐商業銀行")
index
barplot(try1$流通卡數,names=try1$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
try2 <- try1 %>% filter(between(row_number(),6,8))
barplot(try2$流通卡數,names=try2$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
try2 <- try1 %>% filter(between(row_number(),index-2,index+2))
try2
barplot(try2$流通卡數,names=try2$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
try2 <- try1 %>% filter(between(row_number(),index-3,index+3))
barplot(try2$流通卡數,names=try2$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
p <- ggplot(try1,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
p <- ggplot(try2,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
barplot(try2$流通卡數,names=try2$金融機構名稱,horiz=TRUE,las=1,cex.names=0.5)
p <- ggplot(try2,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h")
p <- ggplot(try2,aes(x=金融機構名稱,y=流通卡數)) + geom_bar(stat='identity') + coord_flip()
p
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h", size=0.4)
a <- list(size = 0.5)
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a)
a <- list(titlefont = list(size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a)
a <- list(text = list(size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a)
a <- list(titlefont = list(size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a)
a <- list(tickfont = list(size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a)
a <- list(tickfont = list(size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(yaxis =a, xaxis=a)
a <- list(tickfont = list(color="blue",size = 0.5))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 0.01))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 10))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 20))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 10))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 1))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 3))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 4))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 10))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
a <- list(tickfont = list(color="blue", size = 7))
try2 %>% plot_ly(x = 流通卡數, y = 金融機構名稱, type="bar", orientation = "h") %>%
layout(xaxis = a, yaxis = a)
ggplot(try1,aes(x=月份,y=流通卡數)) +
geom_line()
ggplot(try1,aes(x=月份,y=流通卡數,group=金融機構名稱,color=金融機構名稱)) +
geom_line()
class(try1$金融機構名稱)
try1$金融機構名稱
try1 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% filter(金融機構名稱 != "總計") %>% filter(月份=='10410')
try1 <- try1 %>%  arrange(desc(流通卡數))
head(try1)
try2 <- try1 %>% mutate(金融機構名稱=factor(try1$金融機構名稱,levels=try1$金融機構名稱))
try2 <- try2 %>% filter(between(row_number(),index-3,index+3))
try2
try1 <- try1 %>% mutate(金融機構名稱=factor(try1$金融機構名稱,levels=try1$金融機構名稱))
try1$金融機構名稱
ggplot(try1,aes(x=月份,y=流通卡數,group=金融機構名稱,color=金融機構名稱)) +
geom_line()
try1$金融機構名稱
ggplot(try1,aes(x=月份,y=流通卡數,group=金融機構名稱,color=金融機構名稱)) +
geom_line()
try3 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% filter(金融機構名稱 != "總計") %>%  mutate(金融機構名稱=factor(try1$金融機構名稱,levels=try1$金融機構名稱))
try3 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(credit$金融機構名稱,levels=credit1$金融機構名稱)) %>%
filter(金融機構名稱 != "總計")
try3 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(credit$金融機構名稱,levels=credit$金融機構名稱)) %>%
filter(金融機構名稱 != "總計")
credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(credit$金融機構名稱,levels=credit$金融機構名稱))
credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(金融機構名稱,levels=金融機構名稱))
credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數)
credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(金融機構名稱,levels=unique(金融機構名稱)))
try3 <- credit %>% select(金融機構名稱, 月份, 流通卡數, 有效卡數, 當月發卡數, 當月停卡數) %>% mutate(金融機構名稱=factor(金融機構名稱,levels=unique(金融機構名稱))) %>%
filter(金融機構名稱 != "總計")
head(try3)
ggplot(try3,aes(x=月份,y=流通卡數,group=金融機構名稱,color=金融機構名稱)) +
geom_line()
p <- ggplot(try3,aes(x=月份,y=流通卡數,group=金融機構名稱,color=金融機構名稱)) +
geom_line()
plot_ly(p)
ggplot(try3,aes(x=月份,y=流通卡數,group=金融機構名稱)) +
geom_line()
ggplot(try3,aes(x=月份,y=流通卡數,color=金融機構名稱)) +
geom_line()
try4 <- try3 %>% filter(金融機構名稱 %in% try2$金融機構名稱)
p <- ggplot(try3,aes(x=月份,y=流通卡數,color=金融機構名稱)) +
geom_line()
p <- ggplot(try4,aes(x=月份,y=流通卡數,color=金融機構名稱)) +
geom_line()
p <- ggplot(try4,aes(x=月份,y=流通卡數,color=金融機構名稱)) +
geom_line()
p
p <- ggplot(try4,aes(x=月份,y=有效卡數,color=金融機構名稱)) +
geom_line()
p <- ggplot(try4,aes(x=月份,y=有效卡數,color=金融機構名稱)) +
geom_line()
p
p <- ggplot(try4,aes(x=月份,y=當月發卡數,color=金融機構名稱)) +
geom_line()
p
try4$當月發卡數
p <- ggplot(try4,aes(x=月份,y=當月停卡數,color=金融機構名稱)) +
geom_line()
p
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
rmarkdown::render("index.Rmd")
library(knitr)
read.table("/home/gg/data/water.txt")
a <- read.table("/home/gg/data/water.txt", header =T)
a
library(reshape2)
?melt(a)
DT <- data.table(a)
library(data.table)
DT <- data.table(a)
DT <- data.table(
i1 = c(1:5, NA),
i2 = c(NA,6,7,8,9,10),
f1 = factor(sample(c(letters[1:3], NA), 6, TRUE)),
c1 = sample(c(letters[1:3], NA), 6, TRUE),
d1 = as.Date(c(1:3,NA,4:5), origin="2013-09-01"),
d2 = as.Date(6:1, origin="2012-01-01"))
DT[, l1 := DT[, list(c=list(rep(i1, sample(5,1)))), by = i1]$c] # list cols
DT[, l2 := DT[, list(c=list(rep(c1, sample(5,1)))), by = i1]$c]
DT
melt(DT, id=1:2, measure=3)
names(ChickWeight) <- tolower(names(ChickWeight))
DT <- melt(as.data.table(ChickWeight), id=2:4) # calls melt.data.table
DT
dcast(DT, time ~ variable, fun=mean)
paste0("Pag",a$Pag)
a$Pag <- paste0("Pag",a$Pag)
DT <- data.table(a)
a
names(ChickWeight) <- tolower(names(ChickWeight))
DT <- melt(as.data.table(ChickWeight), id=2:4) # calls melt.data.table
# dcast is a S3 method in data.table from v1.9.6
dcast(DT, time ~ variable, fun=mean)
a
DT
dcast.data.table(a.DT, ID ~ Pag , value.var = Can)
a.DT <- data.table(a)
dcast.data.table(a.DT, ID ~ Pag , value.var = Can)
dcast.data.table(a.DT, ID ~ Pag , value.var = can)
dcast.data.table(a.DT, ID ~ Pag , value.var = "can")
